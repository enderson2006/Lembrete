/**
 * Script para configurar HTTPS localmente
 * Alternativas ao ngrok para desenvolvimento
 */

const https = require('https');
const fs = require('fs');
const path = require('path');

function generateSelfSignedCert() {
  console.log('üîí Para HTTPS local, voc√™ tem algumas op√ß√µes:\n');
  
  console.log('üìã OP√á√ÉO 1 - Cloudflare Tunnel (Recomendado):');
  console.log('1. Acesse: https://dash.cloudflare.com/');
  console.log('2. V√° em "Zero Trust" > "Access" > "Tunnels"');
  console.log('3. Crie um novo tunnel');
  console.log('4. Configure para apontar para localhost:5173');
  console.log('5. Voc√™ receber√° uma URL HTTPS gratuita!\n');
  
  console.log('üìã OP√á√ÉO 2 - Serveo (Simples):');
  console.log('1. No terminal, rode: ssh -R 80:localhost:5173 serveo.net');
  console.log('2. Voc√™ receber√° uma URL HTTPS automaticamente\n');
  
  console.log('üìã OP√á√ÉO 3 - LocalTunnel:');
  console.log('1. npm install -g localtunnel');
  console.log('2. lt --port 5173');
  console.log('3. Voc√™ receber√° uma URL HTTPS\n');
  
  console.log('üìã OP√á√ÉO 4 - Deploy Direto (Mais F√°cil):');
  console.log('1. Fa√ßa push do c√≥digo para GitHub');
  console.log('2. Deploy no Netlify/Vercel (HTTPS autom√°tico)');
  console.log('3. Configure as vari√°veis l√° mesmo\n');
  
  console.log('‚ö° OP√á√ÉO R√ÅPIDA - Teste Local:');
  console.log('Para testar rapidamente, voc√™ pode usar o certificado auto-assinado:');
  console.log('1. Aceite o aviso de seguran√ßa no navegador');
  console.log('2. As notifica√ß√µes funcionar√£o para teste\n');
}

function createHTTPSServer() {
  const httpsConfig = `
// vite.config.ts - Configura√ß√£o HTTPS local
import { defineConfig } from 'vite';
import { readFileSync } from 'fs';
import { resolve } from 'path';

export default defineConfig({
  server: {
    https: {
      key: readFileSync(resolve(__dirname, 'localhost-key.pem')),
      cert: readFileSync(resolve(__dirname, 'localhost.pem')),
    },
    host: '0.0.0.0',
    port: 5173
  },
  // ... resto da configura√ß√£o
});
`;

  console.log('üîß Para configurar HTTPS local com certificado:');
  console.log('1. Instale mkcert: https://github.com/FiloSottile/mkcert');
  console.log('2. Execute: mkcert -install');
  console.log('3. Execute: mkcert localhost 127.0.0.1 ::1');
  console.log('4. Configure o vite.config.ts com o c√≥digo acima\n');
}

function showDeploymentOptions() {
  console.log('üöÄ OP√á√ïES DE DEPLOY COM HTTPS AUTOM√ÅTICO:\n');
  
  console.log('1Ô∏è‚É£ NETLIFY (Recomendado):');
  console.log('   - Conecte seu reposit√≥rio GitHub');
  console.log('   - Build command: npm run build');
  console.log('   - Publish directory: dist');
  console.log('   - HTTPS autom√°tico + dom√≠nio gratuito\n');
  
  console.log('2Ô∏è‚É£ VERCEL:');
  console.log('   - Conecte seu reposit√≥rio GitHub');
  console.log('   - Deploy autom√°tico');
  console.log('   - HTTPS autom√°tico + dom√≠nio gratuito\n');
  
  console.log('3Ô∏è‚É£ GITHUB PAGES:');
  console.log('   - Configure GitHub Actions');
  console.log('   - HTTPS autom√°tico');
  console.log('   - Dom√≠nio: username.github.io/repo\n');
  
  console.log('4Ô∏è‚É£ RAILWAY:');
  console.log('   - Deploy direto do GitHub');
  console.log('   - HTTPS autom√°tico');
  console.log('   - Dom√≠nio personalizado gratuito\n');
}

function createDeployScript() {
  const deployScript = `#!/bin/bash
# Script de deploy autom√°tico

echo "üöÄ Preparando deploy..."

# Build da aplica√ß√£o
npm run build

echo "‚úÖ Build conclu√≠do!"
echo "üìÅ Arquivos prontos na pasta 'dist'"
echo ""
echo "üåê Op√ß√µes de deploy:"
echo "1. Arraste a pasta 'dist' para Netlify Drop"
echo "2. Use 'vercel --prod' se tiver Vercel CLI"
echo "3. Fa√ßa push para GitHub e configure GitHub Pages"
echo ""
echo "‚ö†Ô∏è  N√£o esque√ßa de configurar as vari√°veis de ambiente:"
echo "   VITE_SUPABASE_URL"
echo "   VITE_SUPABASE_ANON_KEY" 
echo "   VITE_VAPID_PUBLIC_KEY"
`;

  fs.writeFileSync('deploy.sh', deployScript);
  fs.chmodSync('deploy.sh', '755');
  console.log('‚úÖ Script de deploy criado: deploy.sh');
}

function main() {
  console.log('üîí CONFIGURA√á√ÉO HTTPS - Alternativas ao ngrok\n');
  
  generateSelfSignedCert();
  createHTTPSServer();
  showDeploymentOptions();
  createDeployScript();
  
  console.log('üí° RECOMENDA√á√ÉO:');
  console.log('Para testar rapidamente, use Cloudflare Tunnel ou deploy direto no Netlify!');
  console.log('Ambos fornecem HTTPS autom√°tico e s√£o gratuitos.\n');
  
  console.log('üéØ PR√ìXIMO PASSO:');
  console.log('1. Escolha uma das op√ß√µes acima');
  console.log('2. Configure as vari√°veis do Supabase');
  console.log('3. Teste as notifica√ß√µes push!');
}

if (require.main === module) {
  main();
}

module.exports = { main };